install.packages("remotes")
remotes::install_github("omnideconv/omnideconv", dependencies = TRUE)
install.packages("FNN", dependencies=TRUE)
q()
q()
install.packages("pak")
q()
install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
pak::pkg_install("omnideconv/omnideconv")
q()
y
q()
pak::pkg_install("omnideconv/omnideconv")
q()
install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
pak::pkg_install("omnideconv/omnideconv", dependencies=TRUE)
plan <- pak::pkg_plan("omnideconv/omnideconv", dependencies = TRUE)
.Last.error
install.packages("pkgdepends")
library(pkgdepends)
plan <- new_pkg_installation_proposal("omnideconv/omnideconv", config = list(dependencies = TRUE))
plan$solve()
plan$draw()
.Last.error
remotes::install_github("omnideconv/omnideconv", dependencies = FALSE)
install.packages(c(
  "snowfall", "bbplot", "dplyr", "ggplot2", "plotly",
  "RColorBrewer", "readr", "tidyr", "uuid"
))
q()
BiocManager::install("XVector")
BiocManager::install(c(
  "GenomicRanges", "SparseArray", "DelayedArray",
  "SummarizedExperiment", "SingleCellExperiment"
))
remotes::install_github("omnideconv/omnideconv", dependencies = FALSE)
install.packages("anndata")
q()
remotes::install_github("bbc/bbplot")
q()
remotes::install_github("bbc/bbplot")
remotes::install_github("omnideconv/omnideconv", dependencies = FALSE)
remotes::install_github("omnideconv/SCOPfunctions")
remotes::install_github("CBMR-Single-Cell-Omics-Platform/SCOPfunctions")
BiocManager::install("Seurat")
BiocManager::install("MAST")
remotes::install_github("CBMR-Single-Cell-Omics-Platform/SCOPfunctions")
install.packages("Seurat")
q()
